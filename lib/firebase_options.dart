// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:ya_todo_app/config/flavors/app_flavor.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyDDGWEIi8eac7p7nT84kFU7AFYEZWBgkIQ',
    appId: '1:761127175277:android:a246bc048922b12e7feb64',
    messagingSenderId: '761127175277',
    projectId: 'ya-todo-prod',
    storageBucket: 'ya-todo-prod.appspot.com',
  );

  static const FirebaseOptions androidDev = FirebaseOptions(
    apiKey: 'AIzaSyCOe8djAc3GnxLoqQG5g9_6FdxhqM5Xs8A',
    appId: '1:411404993911:android:2b1f371779986214fa8d72',
    messagingSenderId: '411404993911',
    projectId: 'ya-todo-dev',
    storageBucket: 'ya-todo-dev.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyCn769U9VrMUulEYfSW__wB7Vi7yOBGdpA',
    appId: '1:761127175277:ios:7d6110dc59716a157feb64',
    messagingSenderId: '761127175277',
    projectId: 'ya-todo-prod',
    storageBucket: 'ya-todo-prod.appspot.com',
    iosClientId:
        '761127175277-nj32psko009v6q0rtmhs7kk349q2i0ib.apps.googleusercontent.com',
    iosBundleId: 'com.example.yaTodoApp',
  );

  static const FirebaseOptions iosDev = FirebaseOptions(
    apiKey: 'AIzaSyDRp6M1BuHgcNUk0vwIvFx8U6NLbMmkMOw',
    appId: '1:411404993911:ios:c8f69b8ba40772d1fa8d72',
    messagingSenderId: '411404993911',
    projectId: 'ya-todo-dev',
    storageBucket: 'ya-todo-dev.appspot.com',
    iosClientId:
        '411404993911-ng4vmfaptju934p1rai4o37jbg8iluq4.apps.googleusercontent.com',
    iosBundleId: 'com.example.yaTodoApp.dev',
  );

  static FirebaseOptions currentPlatform(AppFlavor flavor) {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    // ignore: missing_enum_constant_in_switch
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return getByTypeAndroid(flavor);
      case TargetPlatform.iOS:
        return getByTypeIOS(flavor);
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
    }
  }

  static FirebaseOptions getByTypeAndroid(AppFlavor falvor) {
    switch (falvor) {
      case AppFlavor.dev:
        return androidDev;
      case AppFlavor.prod:
        return android;
    }
  }

  static FirebaseOptions getByTypeIOS(AppFlavor falvor) {
    switch (falvor) {
      case AppFlavor.dev:
        return iosDev;
      case AppFlavor.prod:
        return ios;
    }
  }
}
